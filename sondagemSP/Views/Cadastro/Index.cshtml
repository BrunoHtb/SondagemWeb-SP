@model IEnumerable<sondagemSP.Models.Cadastro>
@{
    ViewData["Title"] = "Cadastro";
}
<div class="text-center">
    <h1 class="display-4 text-decoration-underline fw-bolder">Cadastros Sondagem - SP</h1>
</div>

<div style="margin:0px,20px">
    <h3>
        @ViewBag.TotalCadastro @ViewBag.Cadastro
    </h3>
</div>

<div style="height: 300px; overflow-y: scroll">
    <table id="tabela-cadastros" class="table">
        <thead style="position:static">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Nome)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DataCadastro)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Latitude)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Longitude)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Rodovia)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Estaca)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Regional)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Subtrecho)
                </th>
            </tr>
        </thead>

        <tbody>
            @foreach (var item in Model)
            {
                <tr class="linha-tabela">
                    <td id="nome">
                        @item.Nome
                    </td>
                    <td>
                        @item.DataCadastro
                    </td>
                    <td>
                        @item.Latitude
                    </td>
                    <td>
                        @item.Longitude
                    </td>
                    <td id="latitude-prevista">
                        @item.LatitudePrevista
                    </td>
                    <td id="longitude-prevista">
                        @item.LongitudePrevista
                    </td>
                    <td>
                        @item.Rodovia
                    </td>
                    <td id="estaca">
                        @item.Estaca
                    </td>
                    <td>
                        @item.Regional
                    </td>
                    <td>
                        @item.Subtrecho
                    </td>
                    <td>
                        <div class="btn-group" role="group">
                            <a asp-action="Edit" asp-route-id="@item.ID" role="button" class="btn btn-primary" method="post"> Editar </a>
                            <a asp-action="Delete" asp-route-id="@item.ID" role="button" class="btn btn-danger"> Deletar </a>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div id="map" style="width:100%; height:350px; margin-top:20px"></div>

<script src="~/lib/leaflet/leaflet.js"></script>
<script src="~/lib/leaflet/leaflet.min.js"></script>
<script src="~/js/mapa.js"></script>
<script>
    //Salva no jsModel a lista, foi necessario fazer new{Cadastros = Model} pq sem ele dá erro
    // de async

    var jsModel = @Html.Raw(Json.Serialize(new { Cadastros = Model }));
    //Pega o primeiro elemento para localizar no mapa a região
    var map = L.map('map').setView([jsModel.cadastros[0].latitudePrevista.replace(",", "."), jsModel.cadastros[0].longitudePrevista.replace(",", ".")], 15);

    L.tileLayer('http://{s}.google.com/vt/lyrs=s,h&x={x}&y={y}&z={z}', {
        maxZoom: 22,
        subdomains: ['mt0', 'mt1', 'mt2', 'mt3']
    }).addTo(map);
</script>

